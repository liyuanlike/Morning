<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.pussinboots.morning.product.mapper.ProductMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="org.pussinboots.morning.product.entity.Product">
		<id column="product_id" property="productId" />
		<result column="product_number" property="productNumber" />
		<result column="label_id" property="labelId" />
		<result column="name" property="name" />
		<result column="show_score" property="showScore" />
		<result column="show_price" property="showPrice" />
		<result column="introduce" property="introduce" />
		<result column="pic_img" property="picImg" />
		<result column="show_in_top" property="showInTop" />
		<result column="show_in_nav" property="showInNav" />
		<result column="show_in_hot" property="showInHot" />
		<result column="show_in_shelve" property="showInShelve" />
		<result column="create_time" property="createTime" />
		<result column="create_by" property="createBy" />
		<result column="shelve_time" property="shelveTime" />
		<result column="shelve_by" property="shelveBy" />
		<result column="update_time" property="updateTime" />
		<result column="update_by" property="updateBy" />
		<result column="search_key" property="searchKey" />
		<result column="page_title" property="pageTitle" />
		<result column="page_description" property="pageDescription" />
		<result column="page_keyword" property="pageKeyword" />
		<result column="remarks" property="remarks" />
	</resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        product_id AS productId, product_number AS productNumber, label_id AS labelId, name, show_price AS showPrice, introduce, pic_img AS picImg, show_in_top AS showInTop, show_in_nav AS showInNav, show_in_hot AS showInHot, show_in_shelve AS showInShelve, create_time AS createTime, create_by AS createBy, shelve_time AS shelveTime, shelve_by AS shelveBy, update_time AS updateTime, update_by AS updateBy, search_key AS searchKey, page_title AS pageTitle, page_description AS pageDescription, page_keyword AS pageKeyword, remarks
    </sql>
    
    <!-- 根据商品编号和状态查找商品 -->
	<select id="getByNumber" resultType="org.pussinboots.morning.product.pojo.vo.ProductVO">
		SELECT
	        p.product_id AS productId, 
	        p.product_number AS productNumber,
	        name, 
	        show_score AS showScore, 
	        show_price AS showPrice, 
	        introduce, 
	        pic_img AS picImg, 
	        page_title AS pageTitle, 
	        page_description AS pageDescription, 
	        page_keyword AS pageKeyword, 
   	        label_name AS labelName,
   	        description
   	    FROM
   	    	os_product p
   	    LEFT JOIN os_product_detail d ON p.product_number = d.product_number
   	    LEFT JOIN (
	    	SELECT
	    		label_id,
	    		label_name
	    	FROM
	    		os_label
	    	WHERE
	    		status = #{status}
	    ) l ON p.label_id = l.label_id
		WHERE
			p.product_number = #{productNumber}
		AND	show_in_shelve = #{status}
	</select>

	<!--由于平台还不是特别复杂，先同意使用POJO不区分VO PO BO DTO等等-->
	<select id="getProductByNumber" resultType="org.pussinboots.morning.product.pojo.vo.ProductVO">
		SELECT
	        p.product_number AS productNumber,
	        name,
	        show_score AS showScore,
	        show_price AS showPrice,
	        show_in_top AS showInTop,
	        show_in_nav AS showInNav,
	        show_in_hot AS showInHot,
	        show_in_shelve AS showInShelve,
	        p.create_time AS createTime,
	        introduce,
	        pic_img AS picImg,
   	      	d.description AS description,
   	      	e.stock AS stock
   	    FROM
   	    	os_product p
   	    LEFT JOIN os_product_detail d ON p.product_number = d.product_number
   	    LEFT JOIN os_product_specification e ON p.product_number = e.product_number

		WHERE p.product_number = #{productNumber}

	</select>

	<!-- 查询商品富文本信息 -->
	<select id="getProductDescription" resultType="java.lang.String">
		SELECT
			description
		FROM
			os_product_detail
		WHERE
			product_number = #{productNumber}
	</select>


	<!-- 查询所有商品 -->
	<select id="getAllProduct" resultType="org.pussinboots.morning.product.pojo.vo.ProductVO">
		SELECT
			p.product_id AS productId,
			p.product_number AS productNumber,
			name,
			show_score AS showScore,
			show_price AS showPrice,
			introduce,
			pic_img AS picImg,
			page_title AS pageTitle,
			page_description AS pageDescription,
			page_keyword AS pageKeyword,
			label_name AS labelName,
			isFrozen AS isFrozen
		FROM
			os_product p
			LEFT JOIN os_product_detail d ON p.product_number = d.product_number
			LEFT JOIN (
			SELECT
			label_id,
			label_name
			FROM
			os_label
			) l ON p.label_id = l.label_id
			ORDER BY p.create_time
		limit #{offset},#{limit}
	</select>




	<!-- 查询商品的总数量 -->
	<select id="getAllProductTotal" resultType="java.lang.Integer">
		SELECT
		COUNT(NAME)
		FROM
		os_product p
		LEFT JOIN os_product_detail d ON p.product_number = d.product_number
		LEFT JOIN (
		SELECT
		label_id,
		label_name
		FROM
		os_label
		) l ON p.label_id = l.label_id
	</select>

	<!-- 查询商品的总数量 -->
	<select id="getProductForzen" resultType="java.lang.Integer">
		SELECT
			isFrozen
		FROM
			os_product
		WHERE
			product_number = #{productNumber}
	</select>


	<insert id="insert">
		INSERT INTO
			os_product(
				product_id,
				product_number,
				name,
				show_score,
				show_price,
				introduce,
				create_time,
				update_time,
				create_by,
				update_by,
				show_in_top,
				show_in_nav,
				show_in_hot,
				show_in_shelve,
				pic_img
			)
		VALUES
		(
			#{product.productId},
			#{product.productNumber},
			#{product.name},
			#{product.showScore},
			#{product.showPrice},
			#{product.introduce},
			now(),
			now(),
			#{userName},
			#{userName},
			#{product.showInTop},
			#{product.showInNav},
			#{product.showInHot},
			#{product.showInShelve},
			#{picImageUrl}
		)

		<selectKey resultType="java.lang.Integer">
			SELECT @@IDENTITY
		</selectKey>

	</insert>



	<update id="updateProductFrozen">

		UPDATE os_product SET

		<if test="type!=null and type==2">
			isFrozen=1
		</if>

		<if test="type!=null and type==1">
			isFrozen=0
		</if>

		WHERE product_number = #{productNumber}

	</update>



</mapper>
